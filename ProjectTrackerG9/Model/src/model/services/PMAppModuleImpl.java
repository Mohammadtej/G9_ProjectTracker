package model.services;


import model.views.staticvo.EmployeePositionsVOImpl;
import model.views.staticvo.StaticDocumentVOImpl;
import model.views.staticvo.StaticStatusVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 18 14:26:58 IST 2024
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PMAppModuleImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public PMAppModuleImpl() {
    }


    /**
     * Container's getter for TLs1.
     * @return TLs1
     */
    public ViewObjectImpl getTLs1() {
        return (ViewObjectImpl) findViewObject("TLs1");
    }

    /**
     * Container's getter for PLs1.
     * @return PLs1
     */
    public ViewObjectImpl getPLs1() {
        return (ViewObjectImpl) findViewObject("PLs1");
    }

    /**
     * Container's getter for PLs2.
     * @return PLs2
     */
    public ViewObjectImpl getPLs2() {
        return (ViewObjectImpl) findViewObject("PLs2");
    }

    /**
     * Container's getter for PLs.
     * @return PLs
     */
    public ViewObjectImpl getPLs() {
        return (ViewObjectImpl) findViewObject("PLs");
    }

    /**
     * Container's getter for DocumentsVO1.
     * @return DocumentsVO1
     */
    public ViewObjectImpl getDocumentsVO1() {
        return (ViewObjectImpl) findViewObject("DocumentsVO1");
    }

    /**
     * Container's getter for ProjectLeaders1.
     * @return ProjectLeaders1
     */
    public ViewObjectImpl getProjectLeadersForAParticularPM() {
        return (ViewObjectImpl) findViewObject("ProjectLeadersForAParticularPM");
    }

    /**
     * Container's getter for StaticStatus1.
     * @return StaticStatus1
     */
    public StaticStatusVOImpl getStaticStatus1() {
        return (StaticStatusVOImpl) findViewObject("StaticStatus1");
    }


    /**
     * Container's getter for ProjectsVO3.
     * @return ProjectsVO3
     */
    public ViewObjectImpl getPMProjects() {
        return (ViewObjectImpl) findViewObject("PMProjects");
    }

    /**
     * Container's getter for DocumentsVO2.
     * @return DocumentsVO2
     */
    public ViewObjectImpl getPMDocuments() {
        return (ViewObjectImpl) findViewObject("PMDocuments");
    }

    /**
     * Container's getter for DocumentsForProject1.
     * @return DocumentsForProject1
     */
    public ViewLinkImpl getDocumentsForPMProject() {
        return (ViewLinkImpl) findViewLink("DocumentsForPMProject");
    }

    /**
     * Container's getter for ProjectsVO2.
     * @return ProjectsVO2
     */
    public ViewObjectImpl getPLProjects() {
        return (ViewObjectImpl) findViewObject("PLProjects");
    }

    /**
     * Container's getter for EmployeesVO1.
     * @return EmployeesVO1
     */
    public ViewObjectImpl getEmployees() {
        return (ViewObjectImpl) findViewObject("Employees");
    }


    /**
     * Container's getter for EmployeePositionsVO1.
     * @return EmployeePositionsVO1
     */
    public EmployeePositionsVOImpl getEmployeePositions() {
        return (EmployeePositionsVOImpl) findViewObject("EmployeePositions");
    }

    /**
     * Container's getter for ProjectManagers1.
     * @return ProjectManagers1
     */
    public ViewObjectImpl getProjectManagers() {
        return (ViewObjectImpl) findViewObject("ProjectManagers");
    }

    /**
     * Container's getter for ProjectLeadersVO1.
     * @return ProjectLeadersVO1
     */
    public ViewObjectImpl getProjectLeaders() {
        return (ViewObjectImpl) findViewObject("ProjectLeaders");
    }


    /**
     * Container's getter for TeamMembers1.
     * @return TeamMembers1
     */
    public ViewObjectImpl getTeamMembers() {
        return (ViewObjectImpl) findViewObject("TeamMembers");
    }

    /**
     * Container's getter for TeamLeadersVO1.
     * @return TeamLeadersVO1
     */
    public ViewObjectImpl getTeamLeaders() {
        return (ViewObjectImpl) findViewObject("TeamLeaders");
    }

    /**
     * Container's getter for Documents1.
     * @return Documents1
     */
    public ViewObjectImpl getPLDocuments() {
        return (ViewObjectImpl) findViewObject("PLDocuments");
    }

    /**
     * Container's getter for DocumentsForProject1.
     * @return DocumentsForProject1
     */
    public ViewLinkImpl getDocumentsForProject1() {
        return (ViewLinkImpl) findViewLink("DocumentsForProject1");
    }

    /**
     * Container's getter for Modules1.
     * @return Modules1
     */
    public ViewObjectImpl getModules1() {
        return (ViewObjectImpl) findViewObject("Modules1");
    }

    /**
     * Container's getter for Projects1.
     * @return Projects1
     */
    public ViewObjectImpl getProjects1() {
        return (ViewObjectImpl) findViewObject("Projects1");
    }

    /**
     * Container's getter for Modules2.
     * @return Modules2
     */
    public ViewObjectImpl getModules2() {
        return (ViewObjectImpl) findViewObject("Modules2");
    }

    /**
     * Container's getter for ModuleForProject.
     * @return ModuleForProject
     */
    public ViewLinkImpl getModuleForProject() {
        return (ViewLinkImpl) findViewLink("ModuleForProject");
    }

    /**
     * Container's getter for Modules3.
     * @return Modules3
     */
    public ViewObjectImpl getModulesForProject() {
        return (ViewObjectImpl) findViewObject("ModulesForProject");
    }

    /**
     * Container's getter for ModuleForProject1.
     * @return ModuleForProject1
     */
    public ViewLinkImpl getModuleForProject1() {
        return (ViewLinkImpl) findViewLink("ModuleForProject1");
    }

    /**
     * Container's getter for Modules3.
     * @return Modules3
     */
    public ViewObjectImpl getModuleForTl() {
        return (ViewObjectImpl) findViewObject("ModuleForTl");
    }

    /**
     * Container's getter for Submodule1.
     * @return Submodule1
     */
    public ViewObjectImpl getSubmodule1() {
        return (ViewObjectImpl) findViewObject("Submodule1");
    }

    /**
     * Container's getter for Modules3.
     * @return Modules3
     */
    public ViewObjectImpl getModules3() {
        return (ViewObjectImpl) findViewObject("Modules3");
    }

    /**
     * Container's getter for Submodule2.
     * @return Submodule2
     */
    public ViewObjectImpl getSubmodule2() {
        return (ViewObjectImpl) findViewObject("Submodule2");
    }

    /**
     * Container's getter for SubmoduleModuleVL.
     * @return SubmoduleModuleVL
     */
    public ViewLinkImpl getSubmoduleModuleVL() {
        return (ViewLinkImpl) findViewLink("SubmoduleModuleVL");
    }

    /**
     * Container's getter for Submodule3.
     * @return Submodule3
     */
    public ViewObjectImpl getSubmoduleForModule() {
        return (ViewObjectImpl) findViewObject("SubmoduleForModule");
    }

    /**
     * Container's getter for SubmoduleModuleVL1.
     * @return SubmoduleModuleVL1
     */
    public ViewLinkImpl getSubmoduleModuleVL1() {
        return (ViewLinkImpl) findViewLink("SubmoduleModuleVL1");
    }

    /**
     * Container's getter for Submodule3.
     * @return Submodule3
     */
    public ViewObjectImpl getSubmoduleForPM() {
        return (ViewObjectImpl) findViewObject("SubmoduleForPM");
    }

    /**
     * Container's getter for StaticDocument1.
     * @return StaticDocument1
     */
    public StaticDocumentVOImpl getStaticDocument1() {
        return (StaticDocumentVOImpl) findViewObject("StaticDocument1");
    }
}

